<Application x:Class="SqlServerWorkspace.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:SqlServerWorkspace"
             xmlns:converter="clr-namespace:SqlServerWorkspace.Converters"
             xmlns:DataModel="clr-namespace:SqlServerWorkspace.DataModels"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <!-- Colors -->
        <SolidColorBrush x:Key="DarkBackground" Color="#1E1E1E"/>
        <SolidColorBrush x:Key="DarkForeground" Color="#F1F1F1"/>
        <SolidColorBrush x:Key="SswColor" Color="#CC96F8"/>
        <SolidColorBrush x:Key="InfoColor" Color="#F1F1F1"/>
        <SolidColorBrush x:Key="SuccessColor" Color="#3BCF86"/>
        <SolidColorBrush x:Key="WarningColor" Color="#FCD535"/>
        <SolidColorBrush x:Key="ErrorColor" Color="#ED3161"/>

        <SolidColorBrush x:Key="IconStroke" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="InputGestureForeground" Color="#DDDDDD"/>
        <SolidColorBrush x:Key="TitleBarForeground" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="TitleBarBackground" Color="#000000"/>
        <SolidColorBrush x:Key="TitleBarMouseOver" Color="#777777"/>
        <SolidColorBrush x:Key="SelectedBackground" Color="#444D56"/>

        <FontFamily x:Key="BaseFont">Meiryo UI</FontFamily>
        <sys:Double x:Key="BaseFontSize">12</sys:Double>

        <!-- Converters -->
        <BooleanToVisibilityConverter x:Key="btv"/>
        <converter:DBNullToNullStringConverter x:Key="DBNullToNullStringConverter"/>
        <converter:StringToBrushConverter x:Key="StringToBrushConverter"/>

        <!-- Styles -->
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="{StaticResource BaseFont}" />
            <Setter Property="FontSize" Value="{StaticResource BaseFontSize}" />
            <Setter Property="Height" Value="20" />
            <Setter Property="Foreground" Value="#F1F1F1" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        
        <Style TargetType="{x:Type TextBlock}" x:Key="TreeViewText">
            <Setter Property="FontFamily" Value="{StaticResource BaseFont}" />
            <Setter Property="FontSize" Value="{StaticResource BaseFontSize}" />
            <Setter Property="Height" Value="20" />
            <Setter Property="Foreground" Value="#F1F1F1" />
            <Setter Property="Background" Value="Transparent" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource SswColor}"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type TextBlock}" x:Key="StatusText">
            <Setter Property="FontFamily" Value="{StaticResource BaseFont}" />
            <Setter Property="FontSize" Value="{StaticResource BaseFontSize}" />
            <Setter Property="Foreground" Value="{StaticResource DarkForeground}" />
            <Setter Property="Background" Value="{StaticResource DarkBackground}" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        </Style>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="FontFamily" Value="{StaticResource BaseFont}" />
            <Setter Property="FontSize" Value="{StaticResource BaseFontSize}" />
            <Setter Property="Foreground" Value="#F1F1F1" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="#666" />
            <Setter Property="BorderThickness" Value="0 0 0 1" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="CaretBrush" Value="{StaticResource SswColor}" />
            <Style.Triggers>
                <Trigger Property="TextBox.IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource SswColor}" />
                </Trigger>
                <Trigger Property="TextBox.IsMouseOver" Value="False">
                    <Setter Property="BorderBrush" Value="#666" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type PasswordBox}">
            <Setter Property="FontFamily" Value="{StaticResource BaseFont}" />
            <Setter Property="FontSize" Value="{StaticResource BaseFontSize}" />
            <Setter Property="PasswordChar" Value="*"/>
            <Setter Property="Foreground" Value="#F1F1F1" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="#666" />
            <Setter Property="BorderThickness" Value="0 0 0 1" />
            <Setter Property="CaretBrush" Value="{StaticResource SswColor}" />
            <Style.Triggers>
                <Trigger Property="TextBox.IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource SswColor}" />
                </Trigger>
                <Trigger Property="TextBox.IsMouseOver" Value="False">
                    <Setter Property="BorderBrush" Value="#666" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate TargetType="{x:Type ToggleButton}" x:Key="ComboBoxToggleButton">
            <Grid Margin="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border x:Name="Border" Grid.ColumnSpan="2" Background="Transparent" BorderBrush="#666" BorderThickness="0" />
                <Border x:Name="ContentBorder" Grid.Column="0" Margin="1" Background="Transparent" BorderBrush="#999" BorderThickness="0" />
                <Path x:Name="Arrow" Grid.Column="1" Fill="#F4F4f4" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#49494D" />
                    <Setter TargetName="ContentBorder" Property="Background" Value="#49494D" />
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#49494D" />
                    <Setter TargetName="ContentBorder" Property="Background" Value="#49494D" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Border" Property="Background" Value="#49494D" />
                    <Setter TargetName="Border" Property="BorderBrush" Value="#AAA" />
                    <Setter Property="Foreground" Value="#111"/>
                    <Setter TargetName="Arrow" Property="Fill" Value="Transparent" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate TargetType="{x:Type TextBox}" x:Key="ComboBoxTextBox">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>
        
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="FontFamily" Value="{StaticResource BaseFont}" />
            <Setter Property="FontSize" Value="{StaticResource BaseFontSize}" />
            <Setter Property="Foreground" Value="#F4F4F4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3,3,23,3" VerticalAlignment="Center" HorizontalAlignment="Left" />
                            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="#333337" BorderThickness="1.2" BorderBrush="#666"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained">
                                        </StackPanel>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type ComboBoxItem}">
                        <Setter Property="Height" Value="22" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter Margin="5 0" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource SelectedBackground}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="{x:Type Button}">
            <Setter Property="FontFamily" Value="{StaticResource BaseFont}" />
            <Setter Property="FontSize" Value="{StaticResource BaseFontSize}" />
            <Setter Property="FontWeight" Value="UltraBold" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{StaticResource SswColor}" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="Margin" Value="3" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Border"
                                CornerRadius="3"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{StaticResource SswColor}"
                                BorderThickness="1">
                            <TextBlock Name="TextBlock" 
                                  Text="{TemplateBinding Content}" 
                                  Margin="{TemplateBinding Padding}"
                                  Foreground="{TemplateBinding Foreground}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource SswColor}" />
                                <Setter TargetName="TextBlock" Property="Foreground" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="DataGridButton">
            <Setter Property="FontFamily" Value="{StaticResource BaseFont}" />
            <Setter Property="FontSize" Value="{StaticResource BaseFontSize}" />
            <Setter Property="FontWeight" Value="UltraBold" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{StaticResource SswColor}" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Border"
                                Background="{TemplateBinding Background}">
                            <TextBlock Name="TextBlock" 
                                       Text="{TemplateBinding Content}" 
                                       Margin="{TemplateBinding Padding}"
                                       Foreground="{TemplateBinding Foreground}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource SswColor}" />
                                <Setter TargetName="TextBlock" Property="Foreground" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="HorizontalButton">
            <Setter Property="FontFamily" Value="{StaticResource BaseFont}" />
            <Setter Property="FontSize" Value="{StaticResource BaseFontSize}" />
            <Setter Property="FontWeight" Value="UltraBold" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{StaticResource SswColor}" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{StaticResource SswColor}"
                                BorderThickness="0 0 1 0">
                            <TextBlock Name="TextBlock" 
                                       Text="{TemplateBinding Content}" 
                                       Margin="{TemplateBinding Padding}"
                                       Foreground="{TemplateBinding Foreground}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource SswColor}" />
                                <Setter TargetName="TextBlock" Property="Foreground" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type DataGrid}" x:Key="LightDataGrid">
            <Setter Property="FontFamily" Value="{StaticResource BaseFont}" />
            <Setter Property="FontSize" Value="{StaticResource BaseFontSize}" />
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="HeadersVisibility" Value="Column" />
            <Setter Property="HorizontalGridLinesBrush" Value="#AAAAAA" />
            <Setter Property="VerticalGridLinesBrush" Value="#AAAAAA" />
            <Setter Property="ColumnHeaderHeight" Value="26"/>
            <Setter Property="RowHeight" Value="26"/>
            <Setter Property="CanUserAddRows" Value="True"/>
            <Setter Property="CanUserDeleteRows" Value="True"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="IsReadOnly" Value="False"/>
            <Setter Property="ColumnHeaderStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Background" Value="#E2E2E2"/>
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="BorderBrush" Value="#AAAAAA"/>
                        <Setter Property="BorderThickness" Value="0,0,1,0"/>
                        <Setter Property="Padding" Value="5"/>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="CellStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="BorderBrush" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="DataGridCell">
                                    <Grid Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5"/>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#EAEAEA"/>
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter Property="BorderBrush" Value="Black"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type DataGrid}" x:Key="DarkDataGrid">
            <Setter Property="FontFamily" Value="{StaticResource BaseFont}" />
            <Setter Property="FontSize" Value="{StaticResource BaseFontSize}" />
            <Setter Property="Background" Value="{StaticResource DarkBackground}"/>
            <Setter Property="RowBackground" Value="{StaticResource DarkBackground}"/>
            <Setter Property="Foreground" Value="{StaticResource DarkForeground}"/>
            <Setter Property="SelectionUnit" Value="CellOrRowHeader" />
            <Setter Property="HeadersVisibility" Value="All"/>
            <Setter Property="HorizontalGridLinesBrush" Value="#565656" />
            <Setter Property="VerticalGridLinesBrush" Value="#565656" />
            <Setter Property="RowHeight" Value="26"/>
            <Setter Property="CanUserAddRows" Value="True"/>
            <Setter Property="CanUserDeleteRows" Value="True"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="IsReadOnly" Value="False"/>
            <Setter Property="ClipboardCopyMode" Value="IncludeHeader"/>
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="RowHeaderWidth" Value="40"/>
            <Setter Property="RowHeaderStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type DataGridRowHeader}">
                        <Setter Property="Background" Value="#1F1F1F" />
                        <Setter Property="Foreground" Value="{StaticResource DarkForeground}" />
                        <Setter Property="BorderBrush" Value="#565656" />
                        <Setter Property="BorderThickness" Value="0,0,0,1" />
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="ColumnHeaderStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Background" Value="#1F1F1F"/>
                        <Setter Property="Foreground" Value="{StaticResource DarkForeground}"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="BorderBrush" Value="#565656"/>
                        <Setter Property="BorderThickness" Value="0,0,1,0"/>
                        <Setter Property="Padding" Value="5"/>
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <TextBlock TextWrapping="Wrap" Height="54" TextAlignment="Center">
                                        <TextBlock.Inlines>
                                            <Run Text="{Binding Path=[0]}" FontWeight="Bold" Foreground="{StaticResource SswColor}">
                                                <Run.Style>
                                                    <Style TargetType="Run">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Path=[2]}" Value="*">
                                                                <Setter Property="TextDecorations"  Value="Underline" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Run.Style>
                                            </Run>
                                            <LineBreak />
                                            <Run Text="{Binding Path=[1]}" Foreground="#CACACA"/>
                                            <LineBreak />
                                            <Run Text="{Binding Path=[3]}" Foreground="#909090"/>
                                        </TextBlock.Inlines>
                                    </TextBlock>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="CellStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="Background" Value="#282828" />
                        <Setter Property="Foreground" Value="{StaticResource DarkForeground}"/>
                        <Setter Property="BorderBrush" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="DataGridCell">
                                    <!--<TextBox Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content.Text, Mode=TwoWay, UpdateSourceTrigger=Default}"
                                            HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Padding="0" BorderThickness="0" Background="{TemplateBinding Background}"/>-->
                                    <Grid Background="{TemplateBinding Background}">
                                        <ContentPresenter x:Name="PART_ContentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="3"/>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#121212"/>
                                <Setter Property="Foreground" Value="{StaticResource DarkForeground}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type DataGrid}" x:Key="DarkDataGridSimple">
            <Setter Property="FontFamily" Value="{StaticResource BaseFont}" />
            <Setter Property="FontSize" Value="{StaticResource BaseFontSize}" />
            <Setter Property="Background" Value="{StaticResource DarkBackground}"/>
            <Setter Property="RowBackground" Value="{StaticResource DarkBackground}"/>
            <Setter Property="Foreground" Value="{StaticResource DarkForeground}"/>
            <Setter Property="SelectionUnit" Value="CellOrRowHeader" />
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="HorizontalGridLinesBrush" Value="#565656" />
            <Setter Property="VerticalGridLinesBrush" Value="#565656" />
            <Setter Property="RowHeight" Value="26"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="ColumnHeaderStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Background" Value="#1F1F1F"/>
                        <Setter Property="Foreground" Value="{StaticResource DarkForeground}"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="BorderBrush" Value="#565656"/>
                        <Setter Property="BorderThickness" Value="0,0,1,0"/>
                        <Setter Property="Padding" Value="5"/>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="CellStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="Background" Value="#282828" />
                        <Setter Property="Foreground" Value="{StaticResource DarkForeground}"/>
                        <Setter Property="BorderBrush" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="DataGridCell">
                                    <!--<TextBox Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content.Text, Mode=TwoWay, UpdateSourceTrigger=Default}"
                                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Padding="0" BorderThickness="0" Background="{TemplateBinding Background}"/>-->
                                    <Grid Background="{TemplateBinding Background}">
                                        <ContentPresenter x:Name="PART_ContentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5"/>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#121212"/>
                                <Setter Property="Foreground" Value="{StaticResource DarkForeground}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DarkExpandCollapseToggle" TargetType="ToggleButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Width="15" Height="15" Background="Transparent">
                            <Path x:Name="ExpandPath" Fill="Transparent" Stroke="#FFFFFF" Data="M 0 0 L 4 4 L 8 0 Z"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="ExpandPath" Property="Data" Value="M 0 0 L 4 8 L 8 0 Z"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type DataGridCell}" x:Key="ButtonCell" >
            <Setter Property="Padding" Value="0"/>
        </Style>


        <!--#region Menu & Separator -->
        <Style TargetType="{x:Type Menu}">
            <Setter Property="Background" Value="{StaticResource TitleBarBackground}" />
            <Setter Property="Foreground" Value="{StaticResource TitleBarForeground}" />
        </Style>

        <Style TargetType="{x:Type MenuItem}" x:Key="MainMenuItem">
            <Setter Property="Height" Value="26" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Grid Background="{StaticResource TitleBarBackground}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="_border" Background="{StaticResource TitleBarBackground}"/>
                            <TextBlock Foreground="#eee" Grid.Column="1" Margin="15,0" HorizontalAlignment="Left" VerticalAlignment="Center" x:Name="_txt" Text="{Binding Header,RelativeSource={RelativeSource TemplatedParent}}" />
                            <Popup Placement="Bottom" x:Name="SubMenuPopup" AllowsTransparency="True"  Focusable="False" IsOpen="{TemplateBinding IsSubmenuOpen}" >
                                <ScrollViewer ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                    <Border Background="#888" Name="SubmenuBorder" BorderBrush="LightGray" BorderThickness="1" SnapsToDevicePixels="True"  >
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                    </Border>
                                </ScrollViewer>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="_border" Property="Background" Value="{StaticResource TitleBarMouseOver}"/>
                                <Setter TargetName="_txt" Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="_txt" Property="Foreground" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type MenuItem}" x:Key="SubMenuItem">
            <Setter Property="Height" Value="26" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Grid Background="{StaticResource TitleBarBackground}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30" />
                                <ColumnDefinition Width="*" MinWidth="80"/>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border Background="{StaticResource TitleBarBackground}"/>
                            <Border x:Name="_border"  Grid.ColumnSpan="3"/>
                            <Image x:Name="_imgicon" Width="12" Height="12" Stretch="Uniform"  Source="{Binding Icon.Source, RelativeSource={RelativeSource TemplatedParent}}"  />
                            <TextBlock Foreground="#eee" Grid.Column="1" Margin="5 0 15 0" HorizontalAlignment="Left" VerticalAlignment="Center" x:Name="_txt" Text="{Binding Header,RelativeSource={RelativeSource TemplatedParent}}" />
                            <TextBlock Foreground="{StaticResource InputGestureForeground}" Grid.Column="2" Margin="10 0" HorizontalAlignment="Right" VerticalAlignment="Center" x:Name="_shortcut" Text="{TemplateBinding InputGestureText}" />
                            <Path Visibility="Collapsed" x:Name="_path" Grid.Column="2" HorizontalAlignment="Right" Margin="5 13 5 0"  Data="M0,4 4,0 0,-4 z" Fill="{DynamicResource TitleBarForeground}"/>
                            <Popup Placement="Right" x:Name="SubMenuPopup" AllowsTransparency="True"  Focusable="False" IsOpen="{TemplateBinding IsSubmenuOpen}" >
                                <ScrollViewer ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                    <Border Background="#888" Name="SubmenuBorder" BorderBrush="LightGray" BorderThickness="1" SnapsToDevicePixels="True"  >
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                    </Border>
                                </ScrollViewer>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="true">
                                <Setter TargetName="_path" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="_border" Property="Background" Value="{StaticResource TitleBarMouseOver}"/>
                                <Setter TargetName="_txt" Property="Foreground" Value="White"/>
                                <Setter TargetName="_path" Property="Fill" Value="#333"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="_txt" Property="Foreground" Value="Gray"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Icon">
                                    <Setter.Value>
                                        <Image>
                                            <Image.Source>
                                                <DrawingImage>
                                                    <DrawingImage.Drawing>
                                                        <GeometryDrawing Brush="{StaticResource IconStroke}">
                                                            <GeometryDrawing.Geometry>
                                                                M9 20.42 L2.79 14.21 L5.62 11.38 L9 14.77 L18.88 4.88 L21.71 7.71 L9 20.42Z
                                                            </GeometryDrawing.Geometry>
                                                        </GeometryDrawing>
                                                    </DrawingImage.Drawing>
                                                </DrawingImage>
                                            </Image.Source>
                                        </Image>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Separator" x:Key="SubMenuSeparator">
            <Setter Property="Background" Value="#333"/>
            <Setter Property="Foreground" Value="#333"/>
            <Setter Property="Margin" Value="0,-1"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>

        <Style TargetType="{x:Type ContextMenu}">
            <Setter Property="ItemContainerStyle" Value="{StaticResource MainMenuItem}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                            <StackPanel IsItemsHost="True" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ContextMenu}" x:Key="AvalonContextMenu">
            <Setter Property="ItemContainerStyle" Value="{StaticResource AvalonMenuItem}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
                            <StackPanel IsItemsHost="True" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->
        
        <!--#region ScrollViewer -->
        <Style TargetType="{x:Type ScrollViewer}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Grid.ColumnSpan="2" Grid.RowSpan="2" />
                            <ScrollBar Grid.Column="1" x:Name="PART_VerticalScrollBar" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Background="Transparent" Opacity="0.5" />
                            <ScrollBar Grid.Row="1" Orientation="Horizontal" x:Name="PART_HorizontalScrollBar" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Background="Transparent" Opacity="0.5" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarTrackThumb" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid x:Name="Grid">
                            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                            <Border x:Name="CornerScrollBarRectangle" CornerRadius="4" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Margin="1,1,-2,0" Background="{TemplateBinding Background}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag" Value="Horizontal">
                                <Setter TargetName="CornerScrollBarRectangle" Property="Width" Value="Auto" />
                                <Setter TargetName="CornerScrollBarRectangle" Property="Height" Value="10" />
                                <Setter TargetName="CornerScrollBarRectangle" Property="Margin" Value="0,-4,2,-4" />
                                <Setter TargetName="CornerScrollBarRectangle" Property="CornerRadius" Value="8" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
            <Setter Property="Foreground" Value="#ADABAB" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Width" Value="7" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot" Width="7" Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.00001*" />
                            </Grid.RowDefinitions>
                            <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollBarTrackThumb}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                <Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background" />
                            </Trigger>
                            <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter TargetName="GridRoot" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width" Value="Auto" />
                                <Setter Property="Height" Value="8" />
                                <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->
        
        <!--<Style TargetType="{x:Type TabControl}" x:Key="LightTabControl">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            --><!-- 탭 헤더 부분 --><!--
                            <TabPanel Grid.Row="0" Panel.ZIndex="1" Margin="0" IsItemsHost="True"/>
                            --><!-- 탭 컨텐츠 부분 --><!--
                            <Border Grid.Row="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                <ContentPresenter ContentSource="SelectedContent"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type TabItem}" x:Key="LightTabItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Grid>
                            <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                <StackPanel Orientation="Horizontal">
                                    --><!-- 헤더 텍스트 --><!--
                                    <ContentPresenter x:Name="HeaderHost" ContentSource="Header" VerticalAlignment="Center"/>
                                    --><!-- X 버튼 --><!--
                                    <Button x:Name="CloseButton" Width="16" Height="16" Margin="5,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center" Content="X" Visibility="Collapsed" Command="{Binding Path=DataContext.CloseTabCommand, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" CommandParameter="{Binding}">
                                        <Button.Style>
                                            <Style TargetType="Button">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=HeaderHost}" Value="True">
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                </StackPanel>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="CloseButton" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="LightGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->

        <Style TargetType="{x:Type CheckBox}" x:Key="SswCheckBox">
            <Setter Property="Margin" Value="3,0" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border"
                        Width="18" Height="18" CornerRadius="3" 
                        Background="#C0C0C0" BorderThickness="1" BorderBrush="#404040">
                                    <Path 
                        x:Name="CheckMark"
                        Width="11" Height="11" Margin="1" SnapsToDevicePixels="False" 
                        Stroke="#EEEEEE" StrokeThickness="3"
                        Data="M 1 3 L 5 8 L 10 3" />
                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="0" VerticalAlignment="Center" HorizontalAlignment="Left"
                              RecognizesAccessKey="True"/>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource SswColor}" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#808080" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="#606060" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
